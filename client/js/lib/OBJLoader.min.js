THREE.OBJLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.materials=null;this.regexp={vertex_pattern:/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,normal_pattern:/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,uv_pattern:/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,face_vertex:/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,face_vertex_uv:/^f\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+))?/,face_vertex_uv_normal:/^f\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+)\/(-?\d+))?/,face_vertex_normal:/^f\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)(?:\s+(-?\d+)\/\/(-?\d+))?/,object_pattern:/^[og]\s*(.+)?/,smoothing_pattern:/^s\s+(\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}};THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(c.manager);a.setPath(this.path);a.load(b,function(g){d(c.parse(g))},f,e)},setPath:function(a){this.path=a},setMaterials:function(a){this.materials=a},_createParserState:function(){var a={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(b,d){if(this.object&&this.object.fromDeclaration===false){this.object.name=b;this.object.fromDeclaration=(d!==false);return}if(this.object&&typeof this.object._finalize==="function"){this.object._finalize()}var c=(this.object&&typeof this.object.currentMaterial==="function"?this.object.currentMaterial():undefined);this.object={name:b||"",fromDeclaration:(d!==false),geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:true,startMaterial:function(g,f){var i=this._finalize(false);if(i&&(i.inherited||i.groupCount<=0)){this.materials.splice(i.index,1)}var h={index:this.materials.length,name:g||"",mtllib:(Array.isArray(f)&&f.length>0?f[f.length-1]:""),smooth:(i!==undefined?i.smooth:this.smooth),groupStart:(i!==undefined?i.groupEnd:0),groupEnd:-1,groupCount:-1,inherited:false,clone:function(j){return{index:(typeof j==="number"?j:this.index),name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:this.groupEnd,groupEnd:-1,groupCount:-1,inherited:false}}};this.materials.push(h);return h},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1]}return undefined},_finalize:function(f){var g=this.currentMaterial();if(g&&g.groupEnd===-1){g.groupEnd=this.geometry.vertices.length/3;g.groupCount=g.groupEnd-g.groupStart;g.inherited=false}if(f!==false&&this.materials.length===0){this.materials.push({name:"",smooth:this.smooth})}return g}};if(c&&c.name&&typeof c.clone==="function"){var e=c.clone(0);e.inherited=true;this.object.materials.push(e)}this.objects.push(this.object)},finalize:function(){if(this.object&&typeof this.object._finalize==="function"){this.object._finalize()}},parseVertexIndex:function(d,b){var c=parseInt(d,10);return(c>=0?c-1:c+b/3)*3},parseNormalIndex:function(d,b){var c=parseInt(d,10);return(c>=0?c-1:c+b/3)*3},parseUVIndex:function(d,b){var c=parseInt(d,10);return(c>=0?c-1:c+b/2)*2},addVertex:function(e,d,h){var f=this.vertices;var g=this.object.geometry.vertices;g.push(f[e+0]);g.push(f[e+1]);g.push(f[e+2]);g.push(f[d+0]);g.push(f[d+1]);g.push(f[d+2]);g.push(f[h+0]);g.push(f[h+1]);g.push(f[h+2])},addVertexLine:function(b){var c=this.vertices;var d=this.object.geometry.vertices;d.push(c[b+0]);d.push(c[b+1]);d.push(c[b+2])},addNormal:function(e,d,h){var f=this.normals;var g=this.object.geometry.normals;g.push(f[e+0]);g.push(f[e+1]);g.push(f[e+2]);g.push(f[d+0]);g.push(f[d+1]);g.push(f[d+2]);g.push(f[h+0]);g.push(f[h+1]);g.push(f[h+2])},addUV:function(e,d,h){var f=this.uvs;var g=this.object.geometry.uvs;g.push(f[e+0]);g.push(f[e+1]);g.push(f[d+0]);g.push(f[d+1]);g.push(f[h+0]);g.push(f[h+1])},addUVLine:function(b){var c=this.uvs;var d=this.object.geometry.uvs;d.push(c[b+0]);d.push(c[b+1])},addFace:function(w,v,u,t,r,q,p,o,h,g,f,e){var l=this.vertices.length;var n=this.parseVertexIndex(w,l);var m=this.parseVertexIndex(v,l);var k=this.parseVertexIndex(u,l);var j;if(t===undefined){this.addVertex(n,m,k)}else{j=this.parseVertexIndex(t,l);this.addVertex(n,m,j);this.addVertex(m,k,j)}if(r!==undefined){var s=this.uvs.length;n=this.parseUVIndex(r,s);m=this.parseUVIndex(q,s);k=this.parseUVIndex(p,s);if(t===undefined){this.addUV(n,m,k)}else{j=this.parseUVIndex(o,s);this.addUV(n,m,j);this.addUV(m,k,j)}}if(h!==undefined){var i=this.normals.length;n=this.parseNormalIndex(h,i);m=h===g?n:this.parseNormalIndex(g,i);k=h===f?n:this.parseNormalIndex(f,i);if(t===undefined){this.addNormal(n,m,k)}else{j=this.parseNormalIndex(e,i);this.addNormal(n,m,j);this.addNormal(m,k,j)}}},addLineGeometry:function(e,f){this.object.geometry.type="Line";var g=this.vertices.length;var d=this.uvs.length;for(var h=0,b=e.length;h<b;h++){this.addVertexLine(this.parseVertexIndex(e[h],g))}for(var c=0,b=f.length;c<b;c++){this.addUVLine(this.parseUVIndex(f[c],d))}}};a.startObject("",false);return a},parse:function(u){console.time("OBJLoader");var g=this._createParserState();if(u.indexOf("\r\n")!==-1){u=u.replace("\r\n","\n")}var c=u.split("\n");var p="",f="",k="";var C=0;var o=[];var w=(typeof"".trimLeft==="function");for(var D=0,B=c.length;D<B;D++){p=c[D];p=w?p.trimLeft():p.trim();C=p.length;if(C===0){continue}f=p.charAt(0);if(f==="#"){continue}if(f==="v"){k=p.charAt(1);if(k===" "&&(o=this.regexp.vertex_pattern.exec(p))!==null){g.vertices.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]))}else{if(k==="n"&&(o=this.regexp.normal_pattern.exec(p))!==null){g.normals.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]))}else{if(k==="t"&&(o=this.regexp.uv_pattern.exec(p))!==null){g.uvs.push(parseFloat(o[1]),parseFloat(o[2]))}else{throw new Error("Unexpected vertex/normal/uv line: '"+p+"'")}}}}else{if(f==="f"){if((o=this.regexp.face_vertex_uv_normal.exec(p))!==null){g.addFace(o[1],o[4],o[7],o[10],o[2],o[5],o[8],o[11],o[3],o[6],o[9],o[12])}else{if((o=this.regexp.face_vertex_uv.exec(p))!==null){g.addFace(o[1],o[3],o[5],o[7],o[2],o[4],o[6],o[8])}else{if((o=this.regexp.face_vertex_normal.exec(p))!==null){g.addFace(o[1],o[3],o[5],o[7],undefined,undefined,undefined,undefined,o[2],o[4],o[6],o[8])}else{if((o=this.regexp.face_vertex.exec(p))!==null){g.addFace(o[1],o[2],o[3],o[4])}else{throw new Error("Unexpected face line: '"+p+"'")}}}}}else{if(f==="l"){var a=p.substring(1).trim().split(" ");var z=[],d=[];if(p.indexOf("/")===-1){z=a}else{for(var v=0,F=a.length;v<F;v++){var y=a[v].split("/");if(y[0]!==""){z.push(y[0])}if(y[1]!==""){d.push(y[1])}}}g.addLineGeometry(z,d)}else{if((o=this.regexp.object_pattern.exec(p))!==null){var I=o[0].substr(1).trim();g.startObject(I)}else{if(this.regexp.material_use_pattern.test(p)){g.object.startMaterial(p.substring(7).trim(),g.materialLibraries)}else{if(this.regexp.material_library_pattern.test(p)){g.materialLibraries.push(p.substring(7).trim())}else{if((o=this.regexp.smoothing_pattern.exec(p))!==null){var A=o[1].trim().toLowerCase();g.object.smooth=(A==="1"||A==="on");var t=g.object.currentMaterial();if(t){t.smooth=g.object.smooth}}else{if(p==="\0"){continue}throw new Error("Unexpected line: '"+p+"'")}}}}}}}}g.finalize();var s=new THREE.Group();s.materialLibraries=[].concat(g.materialLibraries);for(var D=0,B=g.objects.length;D<B;D++){var H=g.objects[D];var h=H.geometry;var e=H.materials;var r=(h.type==="Line");if(h.vertices.length===0){continue}var q=new THREE.BufferGeometry();q.addAttribute("position",new THREE.BufferAttribute(new Float32Array(h.vertices),3));if(h.normals.length>0){q.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(h.normals),3))}else{q.computeVertexNormals()}if(h.uvs.length>0){q.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(h.uvs),2))}var m=[];for(var E=0,G=e.length;E<G;E++){var n=e[E];var t=undefined;if(this.materials!==null){t=this.materials.create(n.name);if(r&&t&&!(t instanceof THREE.LineBasicMaterial)){var j=new THREE.LineBasicMaterial();j.copy(t);t=j}}if(!t){t=(!r?new THREE.MeshPhongMaterial():new THREE.LineBasicMaterial());t.name=n.name}t.shading=n.smooth?THREE.SmoothShading:THREE.FlatShading;m.push(t)}var b;if(m.length>1){for(var E=0,G=e.length;E<G;E++){var n=e[E];q.addGroup(n.groupStart,n.groupCount,E)}var x=new THREE.MultiMaterial(m);b=(!r?new THREE.Mesh(q,x):new THREE.Line(q,x))}else{b=(!r?new THREE.Mesh(q,m[0]):new THREE.Line(q,m[0]))}b.name=H.name;s.add(b)}console.timeEnd("OBJLoader");return s}};