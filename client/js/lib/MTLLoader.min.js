THREE.MTLLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};Object.assign(THREE.MTLLoader.prototype,THREE.EventDispatcher.prototype,{load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(this.manager);a.setPath(this.path);a.load(b,function(g){d(c.parse(g))},f,e)},setPath:function(a){this.path=a},setTexturePath:function(a){this.texturePath=a},setBaseUrl:function(a){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.");this.setTexturePath(a)},setCrossOrigin:function(a){this.crossOrigin=a},setMaterialOptions:function(a){this.materialOptions=a},parse:function(j){var l=j.split("\n");var b={};var c=/\s+/;var a={};for(var d=0;d<l.length;d++){var m=l[d];m=m.trim();if(m.length===0||m.charAt(0)==="#"){continue}var f=m.indexOf(" ");var h=(f>=0)?m.substring(0,f):m;h=h.toLowerCase();var g=(f>=0)?m.substring(f+1):"";g=g.trim();if(h==="newmtl"){b={name:g};a[g]=b}else{if(b){if(h==="ka"||h==="kd"||h==="ks"){var k=g.split(c,3);b[h]=[parseFloat(k[0]),parseFloat(k[1]),parseFloat(k[2])]}else{b[h]=g}}}}var e=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);e.setCrossOrigin(this.crossOrigin);e.setManager(this.manager);e.setMaterials(a);return e}});THREE.MTLLoader.MaterialCreator=function(b,a){this.baseUrl=b||"";this.options=a;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=(this.options&&this.options.side)?this.options.side:THREE.FrontSide;this.wrap=(this.options&&this.options.wrap)?this.options.wrap:THREE.RepeatWrapping};THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setCrossOrigin:function(a){this.crossOrigin=a},setManager:function(a){this.manager=a},setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options){return a}var h={};for(var c in a){var i=a[c];var g={};h[c]=g;for(var b in i){var d=true;var f=i[b];var e=b.toLowerCase();switch(e){case"kd":case"ka":case"ks":if(this.options&&this.options.normalizeRGB){f=[f[0]/255,f[1]/255,f[2]/255]}if(this.options&&this.options.ignoreZeroRGBs){if(f[0]===0&&f[1]===0&&f[1]===0){d=false}}break;default:break}if(d){g[e]=f}}}return h},preload:function(){for(var a in this.materialsInfo){this.create(a)}},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0;for(var b in this.materialsInfo){this.materialsArray[a]=this.create(b);this.nameLookup[b]=a;a++}return this.materialsArray},create:function(a){if(this.materials[a]===undefined){this.createMaterial_(a)}return this.materials[a]},createMaterial_:function(f){var b=this.materialsInfo[f];var d={name:f,side:this.side};var a=function(h,g){if(typeof g!=="string"||g===""){return""}if(/^https?:\/\//i.test(g)){return g}return h+g};for(var e in b){var c=b[e];if(c===""){continue}switch(e.toLowerCase()){case"kd":d.color=new THREE.Color().fromArray(c);break;case"ks":d.specular=new THREE.Color().fromArray(c);break;case"map_kd":if(d.map){break}d.map=this.loadTexture(a(this.baseUrl,c));d.map.wrapS=this.wrap;d.map.wrapT=this.wrap;break;case"ns":d.shininess=parseFloat(c);break;case"d":if(c<1){d.opacity=c;d.transparent=true}break;case"Tr":if(c>0){d.opacity=1-c;d.transparent=true}break;case"map_bump":case"bump":if(d.bumpMap){break}d.bumpMap=this.loadTexture(a(this.baseUrl,c));d.bumpMap.wrapS=this.wrap;d.bumpMap.wrapT=this.wrap;break;default:break}}this.materials[f]=new THREE.MeshPhongMaterial(d);return this.materials[f]},loadTexture:function(c,b,e,h,g){var f;var a=THREE.Loader.Handlers.get(c);var d=(this.manager!==undefined)?this.manager:THREE.DefaultLoadingManager;if(a===null){a=new THREE.TextureLoader(d)}if(a.setCrossOrigin){a.setCrossOrigin(this.crossOrigin)}f=a.load(c,e,h,g);if(b!==undefined){f.mapping=b}return f}};